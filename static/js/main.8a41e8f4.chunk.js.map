{"version":3,"sources":["components/Statistic.js","components/Notification.js","components/BtnContainer.js","App.js","index.js","components/feedback.module.css"],"names":["Statistics","good","neutral","bad","total","positive","className","styles","statContainer","Notification","message","ButtonContainer","onGood","onNeutral","onBad","buttonContainer","type","button","onClick","App","totalFeedback","useState","setGood","setNeutral","setBad","TotalFeedback","FeedbackPositPerc","Math","ceil","prev","Statistic","defaultProps","percentageOfGoodFeedb","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAiBeA,EAbI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,SAA7B,OACnB,sBAAKC,UAAWC,IAAOC,cAAvB,UACI,yCAAYP,KACZ,4CAAeC,KACf,wCAAWC,KACA,IAATC,EACF,qCACA,kDAAqBA,KACrB,qDAAwBC,IAAxB,UACM,wBCLKI,EARM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,8BACI,6BAAKA,OCSFC,EAVS,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,MAArB,OAExB,sBAAKR,UAAWC,IAAOQ,gBAAvB,UAEA,wBAAQC,KAAK,SAASV,UAAWC,IAAOU,OAAQC,QAASN,EAAzD,kBACA,wBAAQI,KAAK,SAASV,UAAWC,IAAOU,OAAQC,QAASL,EAAzD,qBACA,wBAAQG,KAAK,SAASV,UAAWC,IAAOU,OAAQC,QAASJ,EAAzD,qBCDMK,EAAM,SAACC,GACX,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYqB,EAAZ,KAEMC,EAAgB,WAEpB,OADsBxB,EAAOC,EAAUC,GAInCuB,EAAoB,WAIxB,OAHkBC,KAAKC,KACpB3B,GAAQA,EAAOC,EAAUC,GAAQ,MAEhB,GAmBtB,OACE,gCACA,oCACA,uDACA,cAAC,EAAD,CACAS,OArB0B,WAC1BU,GAAQ,SAACO,GAAD,OAAUA,EAAO,KACzBJ,IACAC,KAmBAb,UAhB6B,WAC7BU,GAAW,SAACM,GAAD,OAAUA,EAAO,KAC5BJ,KAeAX,MAZyB,WACzBU,GAAO,SAACK,GAAD,OAAUA,EAAO,KACxBJ,WAaEL,GAAiB,cAAC,EAAD,CAAcV,QAAQ,wBACtCU,GACE,oCACL,4CACA,cAACU,EAAD,CACA7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,IACPpB,SAAUqB,WASdP,EAAIY,aAAe,CACjBX,cAAe,EACfY,sBAAuB,GAOVb,Q,MCxEfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,yBAAyB,cAAgB,mC","file":"static/js/main.8a41e8f4.chunk.js","sourcesContent":["import styles from './feedback.module.css'\r\nimport React from 'react';\r\n\r\n\r\nconst Statistics = ({good, neutral, bad, total, positive}) =>(\r\n<div className={styles.statContainer}>\r\n    <span>Good:{good}</span>\r\n    <span>Neutral:{neutral}</span>\r\n    <span>Bad:{bad}</span>\r\n    {(total !==0) ? \r\n    <>\r\n    <p>Total feedbacks: {total}</p>\r\n    <p>Positive feedbacks: {positive()}%</p>\r\n    </> : \"No feedback given\"}\r\n    </div>\r\n);\r\n\r\nexport default Statistics;\r\n","const Notification = ({message}) => {\r\n    return (\r\n        <div>\r\n            <h2>{message}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notification;","import styles from './feedback.module.css'\r\n\r\nconst ButtonContainer = ({onGood, onNeutral, onBad}) => (\r\n\r\n<div className={styles.buttonContainer}>\r\n\r\n<button type=\"button\" className={styles.button} onClick={onGood}>good</button>\r\n<button type=\"button\" className={styles.button} onClick={onNeutral}>neutral</button>\r\n<button type=\"button\" className={styles.button} onClick={onBad}>bad</button>\r\n</div>\r\n);\r\n\r\nexport default ButtonContainer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Statistics from \"./components/Statistic\";\r\nimport Notification from \"./components/Notification\";\r\nimport ButtonContainer from './components/BtnContainer'\r\n\r\nconst App = (totalFeedback) => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const TotalFeedback = () => {\r\n    const totalFeedback = good + neutral + bad;\r\n    return totalFeedback;\r\n  };\r\n\r\n  const FeedbackPositPerc = () => {\r\n    const positPerc = Math.ceil(\r\n      (good / (good + neutral + bad)) * 100\r\n    );\r\n    return positPerc || 0;\r\n  };\r\n\r\n  const handleIncrementGood = () => {\r\n    setGood((prev) => prev + 1);\r\n    TotalFeedback();\r\n    FeedbackPositPerc();\r\n  };\r\n\r\n  const handleIncrementNeutral = () => {\r\n    setNeutral((prev) => prev + 1);\r\n    TotalFeedback();\r\n  };\r\n\r\n  const handleIncrementBad = () => {\r\n    setBad((prev) => prev + 1);\r\n    TotalFeedback();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <section>\r\n    <h1>Please leave feedback</h1>\r\n    <ButtonContainer \r\n    onGood={handleIncrementGood}\r\n    onNeutral={handleIncrementNeutral}\r\n    onBad={handleIncrementBad}\r\n    />\r\n    </section>\r\n    {!totalFeedback && <Notification message=\"No feedback given\" /> }\r\n    {!!totalFeedback && (\r\n         <section>\r\n    <h2>Statistics</h2>\r\n    <Statistics \r\n    good={good}\r\n    neutral={neutral}\r\n    bad={bad}\r\n    total={TotalFeedback()}\r\n    positive={FeedbackPositPerc}\r\n        />\r\n         </section>\r\n    )\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nApp.defaultProps = {\r\n  totalFeedback: 0,\r\n  percentageOfGoodFeedb: 0,\r\n};\r\nApp.propTypes = {\r\n  totalFeedback: PropTypes.number,\r\n  percentageOfGoodFeedb: PropTypes.number,\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedback_button__3zSA4\",\"statContainer\":\"feedback_statContainer__15mWb\"};"],"sourceRoot":""}